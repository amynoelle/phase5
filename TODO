-*- text -*-

* The tests in tests/ don't apply the grading patches.

* We need better example programs.

* Threads:

  - join-invalid doesn't compile if tid_t is not scalar type.

  - mlfqs tests suck.  They aren't even correct, e.g. the amarv
    submission from win0405 is graded incorrectly.

* Userprog project:

  - Don't emphasize that stuff needs to be copied from user space to
    kernel space.  Instead, emphasize validation and suggest that
    copying is a common solution and that it will be necessary in
    project 3 and in real OSes.  Also revise the grading criteria to
    match.

  - Move `join' implementation here, from `threads' project, to help
    normalize the project difficulties.

  - The semantics of the join system call should change so that it
    only returns the exit code once.

  - Mark read-only pages as actually read-only in the page table.  Or,
    since this was consistently rated as the easiest project by the
    students, require them to do it.

  - Don't provide per-process pagedir implementation but only
    single-process implementation and require students to implement
    the separation?  This project was rated as the easiest after all.
    Alternately we could just remove the synchronization on pid
    selection and check that students fix it.

* Filesys project:

  - Increase maximum disk size from 8 MB to something that actually
    requires doubly indirect nodes.  There is a negative pressure here
    from the bitmap object--perhaps we need a specialized bitmap that
    doesn't have to be all in-memory at once.

    Alternatively, shrink the inode size.

  - Add mkdir and ls example user programs.

* Documentation:

  - Finish writing tour.

  - Add "Digging Deeper" sections that describe the nitty-gritty x86
    details for the benefit of those interested.

  - Add explanations of what "real" OSes do to give students some
    perspective.

* Assignments:

  - Add extra credit:

    . Low-level x86 stuff, like paged page tables.

    . Other good ideas.

  - mmap/munmap should use segment IDs like Nachos.  Too hard
    otherwise.

  - Add src/testcases/vm, src/testcases/filesys and make it clear to use
    them?

* Tests:

  - Release some of them.

  - The threads, userprog, vm test source files could use
    factorization and cleanup along the lines of fslib in the filesys
    tests.

  - The p1-4.c testcase needs significant tuning.  Currently it takes
    too long (especially when SHOW_PROGRESS is turned on) and doesn't
    show significant improvement.

